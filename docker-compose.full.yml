version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: blockchain-indexer-postgres
    environment:
      POSTGRES_DB: blockchain_indexer
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - blockchain-indexer

  # Redis
  redis:
    image: redis:7.2-alpine
    container_name: blockchain-indexer-redis
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 5
    networks:
      - blockchain-indexer

  # Blockchain Indexer Application
  blockchain-indexer:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: blockchain-indexer-app
    ports:
      - "8080:8080"
    environment:
      # Application Configuration
      NODE_ENV: production
      LOG_LEVEL: info
      
      # API Configuration
      API_PORT: 8080
      API_HOST: 0.0.0.0
      
      # Redis Configuration
      REDIS_HOST: redis
      REDIS_PORT: 6379
      REDIS_DATABASE: 0
      REDIS_CHANNEL: blockchain-events
      REDIS_TLS: false
      
      # Database Configuration
      DB_HOST: postgres
      DB_PORT: 5432
      DB_USERNAME: postgres
      DB_PASSWORD: postgres
      DB_NAME: blockchain_indexer
      DB_LOGGING: false
      DB_SSL: false
      
      # Chain Configurations (configure as needed)
      BEPOLIA_RPC_URL: ${BEPOLIA_RPC_URL:-}
      BEPOLIA_WS_URL: ${BEPOLIA_WS_URL:-}
      BEPOLIA_CHAIN_ID: ${BEPOLIA_CHAIN_ID:-11155111}
      BEPOLIA_BLOCK_CONFIRMATIONS: ${BEPOLIA_BLOCK_CONFIRMATIONS:-2}
      BEPOLIA_START_BLOCK: ${BEPOLIA_START_BLOCK:-}
      
      # System Configuration
      HEALTH_CHECK_INTERVAL: 30000
      RETRY_DELAY: 300
      MAX_RETRIES: 5
      INDEXING_BATCH_SIZE: 100
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - blockchain-indexer

volumes:
  postgres_data:
  redis_data:

networks:
  blockchain-indexer:
    driver: bridge 